diff --git a/frmts/jpeg/jpgdataset.cpp b/frmts/jpeg/jpgdataset.cpp
--- a/frmts/jpeg/jpgdataset.cpp
+++ b/frmts/jpeg/jpgdataset.cpp
@@ -1344,41 +1344,56 @@ CPLErr JPGDataset::IRasterIO( GDALRWFlag
 {
     if((eRWFlag == GF_Read) &&
        (nBandCount == 3) &&
        (nBands == 3) &&
        (nXOff == 0) && (nXOff == 0) &&
        (nXSize == nBufXSize) && (nXSize == nRasterXSize) &&
        (nYSize == nBufYSize) && (nYSize == nRasterYSize) &&
        (eBufType == GDT_Byte) && (sDInfo.data_precision != 12) &&
-       /*(nPixelSpace >= 3)*/(nPixelSpace > 3) &&
+       (nPixelSpace >= 3) &&
        (nLineSpace == (nPixelSpace*nXSize)) &&
        (nBandSpace == 1) &&
        (pData != NULL) &&
        (panBandMap != NULL) &&
        (panBandMap[0] == 1) && (panBandMap[1] == 2) && (panBandMap[2] == 3))
     {
         Restart();
         int y;
         CPLErr tmpError;
         int x;
 
-        // handles copy with padding case
-        for(y = 0; y < nYSize; ++y)
+        GByte* dstLine = &(((GByte*)pData)[0]);  
+
+        if(nPixelSpace > 3)
         {
-            tmpError = LoadScanline(y);
-            if(tmpError != CE_None) return tmpError;
+           // handles copy with padding case
+           for(y = 0; y < nYSize; ++y)
+           {
+              tmpError = LoadScanline(y);
+              if(tmpError != CE_None) return tmpError;
 
-            for(x = 0; x < nXSize; ++x)
-            {
-                tmpError = LoadScanline(y);
-                if(tmpError != CE_None) return tmpError;
-                memcpy(&(((GByte*)pData)[(y*nLineSpace) + (x*nPixelSpace)]), 
-                       (const GByte*)&(pabyScanline[x*3]), 3);
-            }
+              for(x = 0; x < nXSize; ++x)
+              {
+                 memcpy(&dstLine[x*nPixelSpace],(const GByte*)&(pabyScanline[x*3]), 3);
+              }
+
+              dstLine += nLineSpace;
+           }
+        } 
+        else
+        {
+           for(y = 0; y < nYSize; ++y) 
+           {
+              tmpError = LoadScanline(y);
+              if(tmpError != CE_None) return tmpError;
+
+              memcpy(dstLine, (const GByte*)pabyScanline,nLineSpace);
+              dstLine += nLineSpace;
+           }
         }
 
         return CE_None;
     }
 
     return GDALPamDataset::IRasterIO(eRWFlag, nXOff, nYOff, nXSize, nYSize,
                                      pData, nBufXSize, nBufYSize, eBufType, 
                                      nBandCount, panBandMap, 
