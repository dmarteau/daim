/*
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
#
# The Original Code is Daim code.
#
# The Initial Developer of the Original Code is
#   David Marteau
# Portions created by the Initial Developer are Copyright (C) 2008
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#   David Marteau (dhmarteau@gmail.com)
#
# Alternatively, the contents of this file may be used under the terms of
# either of the GNU General Public License Version 2 or later (the "GPL"),
# or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****
*/

#include "ccidaim.idl"

interface cciIMatrix;
interface cciIFilterContext;
interface cciIImageContainer;
interface cciIRegionContainer;

[scriptable, uuid(e37aeec6-e389-49da-bb8e-048dcb50a2b7)]
interface cciIColorUtils : cciIXPCOMSupports
{
  /**
   * @brief Set the image pixels values to the value \a value.
   */
  void fill( in cciImage image, in cciRegion roi,
             in dm_real  value, in dm_real alpha );

  /**
   * @brief Set the image pixels values to the given rgb value
   */
  void fillRGBA( in cciImage image, in cciRegion roi,
                 in dm_uint16 red, in dm_uint16 green, in dm_uint16 blue,
                 in dm_real alpha );

  /**
   * @brief invert pixel values.
   */
  void invert( in cciImage image, in cciRegion roi, in cciIFilterContext filterCtxt );

  /**
   * @brief Appply rgb transformation matrix
   *
   * R' = m[1,1] * R + m[1,2] * G + m[1,3] * B + m[1,4]
   * G' = m[2,1] * R + m[2,2] * G + m[2,3] * B + m[2,4]
   * B' = m[3,1] * R + m[3,2] * G + m[3,3] * B + m[3,4]
   */
   void doRGBColorTransform( in cciImage image, in cciRegion roi, in cciIMatrix matrix );

};


