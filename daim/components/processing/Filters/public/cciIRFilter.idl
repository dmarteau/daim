/*
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
#
# The Original Code is Daim code.
#
# The Initial Developer of the Original Code is
#   David Marteau
# Portions created by the Initial Developer are Copyright (C) 2008
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#   David Marteau (dhmarteau@gmail.com);
#
# Alternatively, the contents of this file may be used under the terms of
# either of the GNU General Public License Version 2 or later (the "GPL"),
# or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****
*/

#include "cciIImageFilter.idl"

interface cciIFilterContext;

/**
 * @ingroup daim_interfaces
 *
 * @brief Non linear rank filter
 */
[scriptable, uuid(bf5505cd-61cb-4799-b791-3251f8fd8e6e)]
interface cciIRFilter : cciIImageFilter
{
  attribute long rank;

  /**
   * Max filter, this is equivalent to
   * a Rank filter of order 1
   */
  const long Filter_Min    = -1;

  /**
   * Max filter, this is equivalent to
   * a Rank filter of order N
   */
  const long Filter_Max    = -2;

  /**
   * Middle filter, this is equivalent to
   * a non linear order L-filter with first and last coefficient
   * coefficients equals to 1/2 (i.e (min+max)/2)
   */
  const long Filter_Middle = -3;

  /**
   * Mean filter, this is equivalent to
   * a non linear order L-filter with all
   * coefficients equals to 1/N
   */
  const long Filter_Mean   = -4;

  /**
   * Median filter, this is equivalent to
   * a Rank filter of order (N+1)/2
   */
  const long Filter_Median = -5;

  [noscript] void doFilter( in dmImagePtr image, in dmRegionPtr rgn,in long rank,
                            in dmMaskDescriptionRef mask,
                            in cciIFilterContext filterCtxt );

};



%{C++

#define CCI_RFILTER_CID \
{ /* E8275091-ECF0-4C58-A4D5-F6D0B564EE7F */       \
  0xE8275091,                                      \
  0xECF0,                                          \
  0x4C58,                                          \
  {0xA4, 0xD5, 0xF6, 0xD0, 0xB5, 0x64, 0xEE, 0x7F} \
}

#define CCI_RFILTER_CONTRACTID "@daim.org/filters/R-filter;1"
#define CCI_RFILTER_CLASSNAME  "Non linear rank filter"

%}
