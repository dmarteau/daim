/*
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
#
# The Original Code is Daim code.
#
# The Initial Developer of the Original Code is
#   David Marteau
# Portions created by the Initial Developer are Copyright (C) 2008
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#   David Marteau (dhmarteau@gmail.com)
#
# Alternatively, the contents of this file may be used under the terms of
# either of the GNU General Public License Version 2 or later (the "GPL"),
# or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****
*/

#include "ccidaim.idl"

interface cciIImageContainer;
interface cciIRegionContainer;

/**
 * @ingroup daim_interfaces
 *
 * @brief Scale and rotate image transformations
 */
[scriptable, uuid(9b43cd3a-fb7f-4207-99cd-8215fc40f996)]
interface cciITransforms : cciIXPCOMSupports
{
  /**
   * @brief Apply a linear stretch on image.
   *
   * @param image  the src image
   * @param mode   the type of stretching.
   * @param dest   the destination image.
   *
   * The operation will fail is the image does not have the same pixel type.
   */
  void strech( in cciImage image, in cciRegion roi, in unsigned long mode, in cciImage dest );

  /**
   * @brief Apply a rotation  on image.
   *
   * @param image  the src image
   * @param index  index to store the transformed image in the dmIImageList
   *               held by the parameter object.
   * @param angle  the angle in radians.
   * @param dest   the destination image
   */
  void rotate( in cciImage image, in cciRegion roi, in dm_real angle, in cciImage dest );

  /**
   * @brief Create a motif repeated over the image.
   *
   * his function create a regular or periodic representation of
   * the original rectangular area of the operand
   *
   * @note : The position of the original area is left
   *        unchanged in the image.
   *
   * @param image  the src image
   * @param roi    the roi corrsponding to the position of the source rectangle (mandatory)
   * @param periodic if set to dm_true then a periodic pattern is created
   * @param dest   the destination image
   */
  void createMotif( in cciImage  image, in cciRegion roi, in boolean periodic, in cciImage dest);

  /**
   * @brief Flip image horizontally or vertically.
   *
   * @param image  the src image
   * @param way    Horizontal flip = 1, Vertical flip = 2
   * @param context Filter context (mandatory)
   *
   * The result is stored in the buffer of the context
   */
  void flip( in cciImage image, in cciRegion roi, in unsigned long way, in cciImage dest );

  /**
   * @brief Rotate image 90 degres Clockwise (or Counter clockwise)
   *
   * @param image  the src image
   * @param index  index to store the transformed image
   * @param way    if true rotate clockwise
   */
  void rotate90( in cciImage image, in cciRegion roi, in boolean clockwise, in cciImage dest );
};



%{C++

#define CCI_TRANSFORMS_CID \
{ /* 3BA5C133-CB9E-4578-A525-7C7C4767566A */       \
  0x3BA5C133,                                      \
  0xCB9E,                                          \
  0x4578,                                          \
  {0xA5, 0x25, 0x7C, 0x7C, 0x47, 0x67, 0x56, 0x6A} \
}

#define CCI_TRANSFORMS_CONTRACTID "@daim.org/processing/transforms;1"
#define CCI_TRANSFORMS_CLASSNAME  "Transforms utilities"

%}



