/*
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
#
# The Original Code is Daim code.
#
# The Initial Developer of the Original Code is
#   David Marteau
# Portions created by the Initial Developer are Copyright (C) 2008
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#   David Marteau (dhmarteau@gmail.com)
#
# Alternatively, the contents of this file may be used under the terms of
# either of the GNU General Public License Version 2 or later (the "GPL"),
# or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****
*/

#include "cciISupports.idl"

[scriptable, uuid(3de2f077-b5da-4a80-992c-73e341f1bc16)]
interface cciIDrawable : cciIXPCOMSupports
{
  void drawLine( in long x0, in long y0, in long x1, in long y1 );
  void drawRectangle( in long x, in  long y, in unsigned long width, in unsigned long height );
  void drawEllipse( in long  x0, in long  y0, in dm_real r1, in dm_real r2,
		                in dm_real ru, in dm_real rv );

  void drawCircle( in long x0, in long  y0, in dm_real r0 );

  void drawPoly(in [array,size_is count] points, in unsigned long  count );

  void initPath( in unsigned long  flags );
  void closePath();

  /* Attributs */

  attribute dm_uint penSize;
  attribute dm_uint drawMode;
  attribute dm_uint lineMode;

  const unsigned long DRAW_OUTLINE = 0x01;
  const unsigned long DRAW_FILL    = 0x02;


};
