/*
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
#
# The Original Code is Daim code.
#
# The Initial Developer of the Original Code is
#   David Marteau
# Portions created by the Initial Developer are Copyright (C) 2008
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#   David Marteau (dhmarteau@gmail.com)
#
# Alternatively, the contents of this file may be used under the terms of
# either of the GNU General Public License Version 2 or later (the "GPL"),
# or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****
*/

#include "cciIRegionContainer.idl"

interface cciIRegion;

%{C++

typedef CCI_CALLBACK(cciRegionWalkerFun)(dm_int32 y, dm_int32 x1, dm_int32 x2, void *aClosure );

%}

native cciRegionWalkerFun(cciRegionWalkerFun);

[scriptable, uuid(1f55a5c6-f9b8-437e-938b-73e7b15e614a)]
interface cciIRegion : cciIRegionContainer
{
  /* Methods */
  [noscript,notxpcom] cci_result  copyNative( in dmRegionPtr srcRgn, in dm_int32 mode );

  [noscript,notxpcom] void    getBoundingBox( in dmRectRef aRect );
  [noscript,notxpcom] boolean intersect( in dmRectRef aRect );
  [noscript,notxpcom] void    clipToRect( in dmRectRef aRect );

  void setRectRgn( in long x, in long y, in unsigned long width, in unsigned long height );

  void copy( in cciIRegion aSrc, in dm_int32 mode );

  boolean isEmpty();
  boolean isRectangle();
  boolean isValid();

  boolean pointInRegion( in dm_int32 x, in dm_int32 y );

  void clear();
  void translate( in dm_int32 dx, in dm_int32 dy );

  cciIRegion clone();

  readonly attribute dm_uint32 area;

  [noscript] void walkRegion( in cciRegionWalkerFun walker, in voidPtr closure );
};


